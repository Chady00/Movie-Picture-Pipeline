name: Backend Continuous Deployment

on:
  workflow_dispatch:
  

jobs:
  BACKEND-CD-EKS-Docker-AWS-ECR:
    runs-on: ubuntu-latest
    env:
      Path: 'backend'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Python Dependencies Installation
        uses: ./actions/PyDepend_Action
        with:
          Pipfile-path: ${{env.Path}}

      - name: code linting
        uses: py-actions/flake8@v2
        with:
          ignore: "E501"

      - name: Run tests using pyTest
        run: |
          pip install pytest
          cd ${{env.Path}} && pytest

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Login to Container Registry
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REG: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $REG/${{env.Path}}:github.sha ./${{env.Path}}
          docker push $REG/${{env.Path}}:github.sha
        
      - name: Install kubectl
        uses: azure/setup-kubectl@v3
      
      - name: Update AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli
          aws --version
          
      - name: Update kube config
        run: aws eks update-kubeconfig --name cluster --region us-east-1

      - name: Deploy to EKS
        run: |
          kustomize build ./${{ env.Path }}/k8s | kubectl apply -f -

